kind: Deployment
apiVersion: {{ include "jds-common.capabilities.deployment.apiVersion" . }}
metadata:
  name: {{ include "jds-common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
{{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
  labels: {{- include "jds-common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
      {{- include "jds-common.tplValues.render" ( dict "value" .Values.commonLabels "scope" $ ) | nindent 4 }}
    {{- end }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "jds-common.names.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
      {{- if .Values.strategy.rollingUpdate }}
    rollingUpdate: {{- toYaml .Values.strategy.rollingUpdate | nindent 6 }}
      {{- end }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ include "jds-common.names.fullname" . }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.config.createK8sSecretConfig }}
        - name: sql-exporter-config
          secret:
            secretName: {{ include "jds-common.names.fullname" . }}
      {{- end }}
      {{- if not .Values.config.createK8sSecretConfig }}
        - name: sql-exporter-config
          configMap:
            name: {{ include "jds-common.names.fullname" . }}
      {{- end }}
      {{- if .Values.collectorDefFiles }}
        - name: collectors-config
          configMap:
            name: {{ include "jds-common.names.fullname" . }}-collectors
      {{- end }}
          {{- with .Values.extraVolumes }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.image }}
          image: "{{- if .repository -}}{{ .repository }}{{- else -}}{{- if .registry -}}{{ .registry }}{{- end -}}{{- end -}}:{{ default $.Chart.AppVersion .tag }}"
          imagePullPolicy: {{ .pullPolicy | quote }}
          {{- end }}
          env:
            - name: SQLEXPORTER_CONFIG
              value: "/etc/sql_exporter/sql_exporter.yml"
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9399
              protocol: TCP
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if and .Values.livenessProbe.enabled (not .Values.customLivenessProbe) }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9399
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- toYaml .Values.customLivenessProbe | nindent 12 }}
          {{- end }}
          {{- if and .Values.readinessProbe.enabled (not .Values.customReadinessProbe) }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9399
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- toYaml .Values.customReadinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/sql_exporter/
              name: sql-exporter-config
              readOnly: true
          {{- if .Values.collectorDefFiles }}
            - mountPath: /etc/sql_exporter/collectors/
              name: collectors-config
              readOnly: true
          {{- end }}
            {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
